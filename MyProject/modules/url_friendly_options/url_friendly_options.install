<?php

/**
 * @file
 * Install, update and uninstall functions for url_friendly_options.
 */

use Drupal\field\Entity\FieldStorageConfig;

/**
 * Implements hook_requirements().
 */
function url_friendly_options_requirements($phase) {
  $requirements = [];
  if ($phase == 'runtime') {
    $errors = [];
    foreach (FieldStorageConfig::loadMultiple() as $config) {
      /** @var \Drupal\field\FieldStorageConfigInterface $config */
      if ($config->getType() === 'list_string') {
        $field_name = $config->getName();
        $entity_type_id = $config->getTargetEntityTypeId();
        $context = [
          'field_name' => $field_name,
          'entity_type_id' => $entity_type_id,
        ];
        $hooks_return = \Drupal::moduleHandler()->invokeAll('url_friendly_options_bypass_field_validation', $context);
        if (in_array(TRUE, $hooks_return, TRUE)) {
          continue;
        }
        $allowed_values = $config->getSetting('allowed_values');
        $failed_validation = _url_friendly_options_check_allowed_values($allowed_values);
        if (!empty($failed_validation)) {
          $errors[] = "{$entity_type_id}.{$field_name}";
        }
      }
    }

    if (!empty($errors)) {
      $requirements['url_friendly_options'] = [
        'title' => t('URL-friendly option list keys'),
        'value' => t('<b>Non URL-friendly keys found.</b> The following fields nave non-compliant option keys: %fields', [
          '%fields' => implode(", ", $errors),
        ]),
        'description' => t('Edit the field storage definition and make sure all keys are using only alpha-numeric characters and hyphens.'),
        'severity' => REQUIREMENT_ERROR,
      ];
    }
    else {
      $requirements['url_friendly_options'] = [
        'title' => t('URL-friendly option list keys'),
        'value' => t('All option list keys are URL-friendly.'),
        'severity' => REQUIREMENT_OK,
      ];
    }
  }
  return $requirements;
}
